Future API:
https://seattle.cs.washington.edu/wiki/FutureRepyAPI

sendmessage(destip, destport, message, localip, localport)
listenformessage(localip, localport)
listenforconnection(localip, localport)
virtualnamespace.evaluate(context)
tcpserversocket.getconnection()
tcpserversocket.close()
udpserversocket.getmessage()
udpserversocket.close()
createvirtualnamespace(code, name)
getresources()
getlasterror()
createthread(function)
getthreadname()

socket.close()
socket.recv(numbytes)
socket.send(message)
openconnection(destip, destport, localip, localport, timeout)



Done:
listfiles()
gethostbyname(name)
getmyip()
randombytes()
getruntime()
createlock()
sleep(seconds)
lock.acquire(blocking)
lock.release()
openfile(filename, create)
file.close()
exitall()
removefile(filename)
file.readat(sizelimit, offset)
file.writeat(data, offset)


Notes:
- Somewhere a fork is happening. I have to catch and destroy and extra child process.
- blocking does not respond to ctrl-C
- We should talk about error handeling.
- python provides its own mallocs? should we use?
- file i/o has to be memcpyd to avoid GC
- readlines is skipped, memory implementation is complex. Who frees?
