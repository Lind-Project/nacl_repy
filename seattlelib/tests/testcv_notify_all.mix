"""
  Author: Vjekoslav Brajkovic
 
  Start Date: May 16th, 2009
  
  Purpose: Test cases for the condition variable primitive implementation.
"""

include cv.repy


  
def _cv_functor(condition, number, container):
  """
  Internal function that adds the specified number to the specified
  container only when it receives a notification for a given condition.
  """
  cv_wait(condition)
  container.append(number)





def cv_test_notify_all():
  """
  Very similar to cv_test_notify_one(). The only difference is that instead
  of calling notify_one() N times, we are doing a single notify_all() call.
  This time we are only checking to see if both containers are same in size, 
  since we know that FIFO order is preserved.
  """
  condition = cv_create()
  container = []
  limit = 5
  
  for count in range(limit):
    settimer(0.0, _cv_functor, (condition, count, container,))
  
  sleep(1)
  cv_notify_all(condition)
  sleep(1)
  
  cv_destroy(condition)
  
  if len(container) == limit:
    pass
  else:
    print "fail: notify_all failed: some threads were never executed"





if callfunc == 'initialize':
  
  cv_test_notify_all()
  
  exitall()
