#constants pulled from standard lib
MASK=3
O_RDONLY=00
O_WRONLY=01
O_RDWR=02
O_CREAT=0100
O_EXCL=0200
O_NOCTTY=0400
O_TRUNC=01000
O_APPEND=02000
O_NONBLOCK=04000
# O_NDELAY=O_NONBLOCK
O_SYNC=010000
# O_FSYNC=O_SYNC
O_ASYNC=020000

#ifdef __USE_GNU
# define O_DIRECT	 040000	/* Direct disk access.	*/
# define O_DIRECTORY	0200000	/* Must be a directory.	 */
# define O_NOFOLLOW	0400000	/* Do not follow links.	 */
# define O_NOATIME     01000000 /* Do not set atime.  */
# define O_CLOEXEC     02000000 /* Set close_on_exec.  */
#endif

#largest file descriptor
#TODO find out what the system limit is

def lind_fs_mkdir(args):
  mode = args[0]
  file_name = args[1]
  try:
    result_fd = mkdir_syscall(file_name, mode)
  except SyscallError,e:
    return ErrorResponseBuilder("fs_mkdir", e[1], e[2] )
  return SuccessResponseBuilder("fs_mkdir", result_fd)
  

def lind_safe_fs_mkdir(args):
    mode = args[0]
    file_name = args[1]

    assert isinstance(mode, int), "the mode should be an int"
    assert isinstance(file_name, str), "filename should be a string"

    result = lind_fs_mkdir(args)

    assert isinstance(result, Response), "wrong return type %s"%(str(type(result)))
    if not result.is_error:
      assert (result.return_code == 0), "Must return 0 on success." 
    else:
      pass
    return result

