"""

Handlers for the poll system call.

Called from dispatcher.repy

Safe version checks all parameters, then calls real handler.

Poll hadler pulls out the arguments, does any manditory checking
then calls the repy posix library poll system call.  Then packs
the result back up.

"""


def lind_net_poll(args):
    """ poll calls are dispatched to this function.

    See dispatcher.repy for details.

    Given the file descriptor length and flags in a list,
    pull them out and make the actual syscall in the
    file system library.

    Pack the single int returned, or error.
    """

    nfds = args[0]
    timeout = args[1]
    fds_str = args[2]
    fds = parse_struct_pollfds(fds_str, nfds)
    result = 0
    try:
        result = poll_syscall(fds, timeout)
    except SyscallError, e:
        return ErrorResponseBuilder("net_poll", e[1], e[2])

    data = pack_struct_pollfds(result[1], nfds)

    return SuccessResponseBuilder("net_poll", result[0], data)


def lind_safe_net_poll(args):
    """ Safely wrap the poll call.

    See dispatcher.repy for details.

    Check the file descriptor length and flags for consistancy,
    then call the real poll dispatcher.

    """

    result = lind_net_poll(args)

    return result
