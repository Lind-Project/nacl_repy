"""

Handlers for the read system call.

Called from dispatcher.repy

Safe version checks all parameters, then calls real handler.

Read handler pulls out the arguments, does any mandatory checking
then calls the repy posix library read system call.  Then packs
the result back up.

"""


def lind_fs_read(args):
    """ read calls are dispatched to this function.

    See dispatcher.repy for details.

    Given the handle and size in a list,
    pull them out and make the actual syscall in the
    file system library.

    Pack the single int returned, or error.
    """

    handle = args[0]
    size = args[1]

    try:
        result = get_fscall_obj(args[-1]).read_syscall(handle, size)
    except SyscallError, e:
        return ErrorResponseBuilder("fs_read", e[1], e[2])
            
    return SuccessResponseBuilder("fs_read", len(result), result)


def lind_safe_fs_read(args):
    """ Safely wrap the read call.

    See dispatcher.repy for details.

    Check the handle and size for consistency,
    then call the real read dispatcher.

    """

    handle = args[0]
    size = args[1]
    check_valid_fd_handle(handle)
    assert isinstance(size, int)

    result = lind_fs_read(args)

    #if result.is_error == False:
    #    assert(len(result.data) <= TX_BUF_MAX), "returning data larger than transmission buffer."

    return result
