"""

Handlers for the fxstat system call.

Called from dispatcher.repy

Safe version checks all parameters, then calls real handler.

Fxstat handler pulls out the arguments, does any mandatory checking
then calls the repy posix library fxstat system call.  Then packs
the result back up.

"""


def lind_fs_fxstat(args):
    """ fxstat calls are dispatched to this function.

    See dispatcher.repy for details.

    Given the handle and flags in a list,
    pull them out and make the actual syscall in the
    file system library.

    Pack the struct returned, or error.
    """
    stub_starttime = time.clock()

    filedes = args[0]
    ver = args[1]

    if ver == 1:
      try:
          result = get_fs_call(args[-1],"fstat_syscall")(filedes)
      except SyscallError, e:
        return ErrorResponseBuilder("fs_fxstat", e[1], e[2])

      # This format is: dev,ino,mode,nlink,uid,gid,rdev,size,blksize,blocks
      # followed by 2Q for each timestamp.   The ns field is set to 0.
      packed = pack_stat_struct(result)
      # packed_new = pack_stat_struct_new(result)

      print "old"
      print packed
      print "----------"
      # print "new"
      # print packed_new
      # print "----------"


      stub_endtime = time.clock()

      stub_tot = (stub_endtime - stub_starttime)

      add_to_log("stub", stub_tot)
          
      return SuccessResponseBuilder("fs_fxstat", 0, packed)

    else:
      assert False, "not implemented"


def lind_safe_fs_fxstat(args):
    """ Safely wrap the fxstat call.

    See dispatcher.repy for details.

    Check the handle and flags and file for consistency,
    then call the real fxstat dispatcher.

    """

    assert(len(args) == 2), "fsstat should always have two argument"
    handle = args[0]
    ver = args[1]

    assert(ver == 0 or ver == 1), "version has to be stat of fstat"

    check_valid_fd_handle(handle)

    result = lind_fs_fxstat(args)

    if result.is_error == False:
        assert len(result.data) == 112, \
               "result must be exactly the size of struct stat"
    return result
