"""

Handlers for the dup system call.

Called from dispatcher.repy

Safe version checks all parameters, then calls real handler.

Dup hadler pulls out the arguments, does any manditory checking
then calls the repy posix library dup system call.  Then packs
the result back up.

"""


def lind_fs_dup(args):
    """ dup calls are dispatched to this function.

    See dispatcher.repy for details.

    Given the handle in a list,
    pull it out and make the actual syscall in the
    file system library.

    Pack the single int returned, or error.
    """

    handle = args[0]

    try:
        result = dup_syscall(handle)
    except SyscallError, e:
        return ErrorResponseBuilder("fs_dup", e[1], e[2])
    return SuccessResponseBuilder("fs_dup", result)


def lind_safe_fs_dup(args):
    """ Safely wrap the dup call.

    See dispatcher.repy for details.

    Check the file handle for consistancy, then call the real dup dispatcher.

    """

    handle = args[0]

    # Make sure this is not one of the reserved handles we use for libraries
    if handle <= STARTINGFD:
        log("Warning: low file handles are not supported in Lind dup.")

    return lind_fs_dup(args)
