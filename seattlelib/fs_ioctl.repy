"""

Handlers for the ioctl system call.

Called from dispatcher.repy

Safe version checks all parameters, then calls real handler. Not use for the time being.

Ioctl handler pulls out the arguments, does any mandatory checking
then calls the repy posix library ioctl system call.  Then packs
the result back up.

"""

def lind_fs_ioctl(args):
    """ ioctl calls are dispatched to this function.

    See dispatcher.repy for details.

    Given the handle and flag in a list,
    pull them out and make the actual syscall in the
    file system library.

    Pack the single int returned, or error.
    """

    handle = args[0]
    request = args[1]
    arg = args[2]

    try:
        result = get_fs_call(args[-1],"ioctl_syscall")(handle, request, arg)
    except SyscallError, e:
        return ErrorResponseBuilder("fs_ioctl", e[1], e[2])

    return SuccessResponseBuilder("fs_ioctl", result)


def lind_safe_fs_ioctl(args):
    """ Safely wrap the ioctl call.

    See dispatcher.repy for details.

    Check handle and flags check for consistency,
    then call the real ioctl dispatcher.

    """

    handle = args[0]
    request = args[1]

    check_valid_fd_handle(handle)

    assert (request == FIONBIO), "Invalid or unsupported ioctl command"

    return lind_fs_ioctl(args)
