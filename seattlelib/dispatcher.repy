MODE="safe"
# MODE="fast"

#dummy so that lind_strace and no-op doesn't break anything
syscall_table[1] = lambda x: SuccessResponseBuilder("no-op dummy", 0)
syscall_table[3] = lambda x: SuccessResponseBuilder("trace dummy", 0)

# map a systemcall number to a particular function
if MODE == "safe":
  syscall_table[2] = lind_safe_fs_access
  syscall_table[4] = lind_safe_fs_unlink
  syscall_table[5] = lind_safe_fs_link
  syscall_table[9] = lind_safe_fs_xstat
  syscall_table[10] = lind_safe_fs_open
  syscall_table[11] = lind_safe_fs_close
  syscall_table[12] = lind_safe_fs_read
  syscall_table[13] = lind_safe_fs_write
  syscall_table[14] = lind_safe_fs_lseek
  syscall_table[15] = lind_fs_ioctl
  syscall_table[17] = lind_safe_fs_fxstat
  syscall_table[19] = lind_safe_fs_fstatfs
  syscall_table[21] = lind_safe_fs_mmap
  syscall_table[22] = lind_safe_fs_munmap
  syscall_table[23] = lind_safe_fs_getdents
  syscall_table[24] = lind_safe_fs_dup
  syscall_table[25] = lind_safe_fs_dup2
  syscall_table[26] = lind_safe_fs_statfs
  syscall_table[28] = lind_safe_fs_fcntl
  syscall_table[29] = lind_safe_sys_getppid
  syscall_table[30] = lind_safe_sys_exit
  syscall_table[31] = lind_sys_getpid

  syscall_table[33] = lind_safe_net_bind
  syscall_table[34] = lind_safe_net_send
  syscall_table[35] = lind_safe_net_sendto
  syscall_table[36] = lind_safe_net_recv
  syscall_table[37] = lind_safe_net_recvfrom
  syscall_table[38] = lind_safe_net_connect
  syscall_table[39] = lind_safe_net_listen
  syscall_table[40] = lind_safe_net_accept
  syscall_table[43] = lind_safe_net_getsockopt
  syscall_table[44] = lind_safe_net_setsockopt
  syscall_table[45] = lind_safe_net_shutdown
  syscall_table[46] = lind_safe_net_select
  syscall_table[47] = lind_safe_net_getifaddrs
  syscall_table[48] = lind_safe_net_poll
  syscall_table[49] = lind_safe_net_socketpair
  syscall_table[50] = lind_safe_sys_getuid
  syscall_table[51] = lind_safe_sys_geteuid
  syscall_table[52] = lind_safe_sys_getgid
  syscall_table[53] = lind_safe_sys_getegid
  syscall_table[54] = lind_safe_fs_flock
  syscall_table[55] = lind_safe_fs_rename
  syscall_table[56] = lind_safe_net_epoll_create
  syscall_table[57] = lind_safe_net_epoll_ctl
  syscall_table[58] = lind_safe_net_epoll_wait
  
  syscall_table[66] = lind_safe_fs_pipe
  syscall_table[67] = lind_safe_fs_pipe2
  syscall_table[68] = lind_safe_fs_fork
  syscall_table[69] = lind_safe_fs_exec

  syscall_table[125] = lind_safe_net_gethostname
  syscall_table[126] = lind_safe_fs_pread
  syscall_table[127] = lind_safe_fs_pwrite
  
  syscall_table[130] = lind_safe_fs_chdir
  syscall_table[131] = lind_safe_fs_mkdir
  syscall_table[132] = lind_safe_fs_rmdir
  syscall_table[136] = lind_safe_net_socket
  
  syscall_table[144] = lind_safe_net_getsockname
  syscall_table[145] = lind_safe_net_getpeername
  
elif MODE == "fast":
  syscall_table[2] = lind_fs_access
  syscall_table[4] = lind_fs_unlink
  syscall_table[5] = lind_fs_link
  syscall_table[9] = lind_fs_xstat
  syscall_table[10] = lind_fs_open
  syscall_table[11] = lind_fs_close
  syscall_table[12] = lind_fs_read
  syscall_table[13] = lind_fs_write
  syscall_table[14] = lind_fs_lseek
  syscall_table[15] = lind_fs_ioctl
  syscall_table[17] = lind_fs_fxstat
  syscall_table[19] = lind_fs_fstatfs
  syscall_table[21] = lind_fs_mmap
  syscall_table[22] = lind_fs_munmap
  syscall_table[23] = lind_fs_getdents
  syscall_table[24] = lind_fs_dup
  syscall_table[25] = lind_fs_dup2
  syscall_table[26] = lind_fs_statfs
  syscall_table[28] = lind_fs_fcntl
  syscall_table[29] = lind_sys_getppid
  syscall_table[30] = lind_sys_exit
  syscall_table[31] = lind_sys_getpid
  
  syscall_table[33] = lind_net_bind
  syscall_table[34] = lind_net_send
  syscall_table[35] = lind_net_sendto
  syscall_table[36] = lind_net_recv
  syscall_table[37] = lind_net_recvfrom
  syscall_table[38] = lind_net_connect
  syscall_table[39] = lind_net_listen
  syscall_table[40] = lind_net_accept
  syscall_table[43] = lind_net_getsockopt
  syscall_table[44] = lind_net_setsockopt
  syscall_table[45] = lind_net_shutdown
  syscall_table[46] = lind_net_select
  syscall_table[47] = lind_net_getifaddrs
  syscall_table[48] = lind_net_poll
  syscall_table[49] = lind_net_socketpair
  syscall_table[50] = lind_sys_getuid
  syscall_table[51] = lind_sys_geteuid
  syscall_table[52] = lind_sys_getgid
  syscall_table[53] = lind_sys_getegid
  syscall_table[54] = lind_fs_flock
  syscall_table[56] = lind_net_epoll_create
  syscall_table[57] = lind_net_epoll_ctl
  syscall_table[58] = lind_net_epoll_wait
  
  syscall_table[66] = lind_fs_pipe
  syscall_table[67] = lind_fs_pipe2
  syscall_table[68] = lind_fs_fork
  syscall_table[69] = lind_fs_exec
  
  syscall_table[125] = lind_net_gethostname
  syscall_table[126] = lind_fs_pread
  syscall_table[127] = lind_fs_pwrite

  syscall_table[130] = lind_fs_chdir
  syscall_table[131] = lind_fs_mkdir
  syscall_table[132] = lind_fs_rmdir
  syscall_table[136] = lind_net_socket

  syscall_table[144] = lind_net_getsockname
  syscall_table[145] = lind_net_getpeername
  
else:
  assert False, "Invalid mode setting"

if MODE=="safe":
  def ds(call, args):
    assert isinstance(args[-1], int), "the cageid should be an int"
    # Cageid can be -1 but only in direct syscalls that don't go through the
    # dispatcher, these are present in files such as lind_fs_utils as a dummy
    # value.
    assert (args[-1] >= 0), "the cageid should be greater than or equal to zero"

    try:
      call_fun = syscall_table[call]
      syscall_response = call_fun(args)
    except KeyError,e:
      log("[ERROR][dispatch] Failed to look up " + str(call) +" with error "+ str(e) + "\n")
      syscall_response =  ErrorResponseBuilder("dispatcher", "ENOSYS", "The system call is not in the system call table. Call="+str(call))

    assert isinstance(syscall_response, Response), "Returning something that is not a response. Check system calls: " + str(type(syscall_response)) + " form " + str(call)
    return syscall_response
  dispatch_syscall = ds
elif MODE=="fast":
  def ds(call, args):
    try:
      return syscall_table[call](args)
    except KeyError,e:
      log("[ERROR][dispatch] Failed to look up or call " + str(call) +" with error "+ str(e) + "\n")
      return ErrorResponseBuilder("dispatcher", "ENOSYS", "The system call is not in the system call table. Call="+str(call))
  dispatch_syscall = ds
