"""

Handlers for the access system call.

Called from dispatcher.repy

Safe version checks all parameters, then calls real handler.

Access hadler pulls out the arguments, does any manditory checking
then calls the repy posix library access system call.  Then packs
the result back up.

"""


def lind_fs_access(args):
    """ access calls are dispatched to this function.

    See dispatcher.repy for details.

    Given the flags, mode and file name in a list,
    pull them out and make the actual syscall in the
    file system library.

    Pack the single int returned, or error.
    """

    mode = args[0]
    path = args[1]
    try:
        result = access_syscall(path, mode)
        print result
    except SyscallError, e:
        return ErrorResponseBuilder("fs_access", e[1], e[2])
    return SuccessResponseBuilder("fs_access", result)


def lind_safe_fs_access(args):
    """ Safely wrap the access call.

    See dispatcher.repy for details.

    Check the mode path for consistancy,
    then call the real access dispatcher.

    """

    mode = args[0]
    path = args[1]

    assert isinstance(mode, int), "the mode should be an int"

    assert isinstance(path, str), "filename should be a string"

    assert len(path) < PATH_MAX, " path is too long!"

    result = lind_fs_access(args)

    return result
